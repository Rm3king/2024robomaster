#ifndef	CLOSELOOPPARA_H
#define	CLOSELOOPPARA_H
#ifdef __cplusplus
#include "ControlTask.h"

#define GACCEL	9.8011f
#define MWHEEL	2.824

#define LEGMAX 0.400f
#define LEGMID 0.160f
#define LEGMIN 0.150f

#define LQRRESOLUTION 0.010f
#define LQRKNUM 100

/*Paramaters of accelerater and max velocity*/
enum eRobotLegID
{
	LEG_BOTTOM=0,
	LEG_LEN0=1,
	LEG_LEN1=2,	
	LEG_LEN2=3,
	LEG_LEN3=4,
	LEG_LEN4=5,
	LEG_TOP=6,	
};


/*关节长度 加速度 减速度 最大速度 Boost模式系数 Side模式系数*/
//static float LegMovingPara[LEG_TOP+1][6]=
//{
//	{0.180f, 0.010f, 0.015f, 1.0f, 1.2f, 1.0f},
//	{0.220f, 0.011f, 0.020f, 2.0f, 1.5f, 0.8f},
//	{0.250f, 0.012f, 0.018f, 1.5f, 2.0f, 0.8f},
//	{0.280f, 0.010f, 0.015f, 1.0f, 1.0f, 0.7f},
//};
static float LegMovingPara[LEG_TOP+1][6]=
{
	{0.140f, 0.010f, 0.015f, 1.0f, 1.2f, 1.0f},
	{0.200f, 0.010f, 0.015f, 1.5f, 1.3f, 0.8f},
	{0.220f, 0.010f, 0.018f, 1.5f, 1.5f, 0.8f},
	{0.270f, 0.010f, 0.015f, 1.5f, 1.67f, 0.7f},//2.5f
	{0.300f, 0.010f, 0.015f, 1.0f, 1.0f, 0.7f},
	{0.340f, 0.010f, 0.015f, 1.0f, 1.0f, 0.7f},
	{0.390f, 0.010f, 0.015f, 1.0f, 1.0f, 0.7f},
};
//static float LegMovingPara[LEG_TOP+1][6]=
//{
//	{0.160f, 0.010f, 0.015f, 1.0f, 1.2f, 1.0f},
//	{0.160f, 0.010f, 0.015f, 1.0f, 1.2f, 1.0f},
//	{0.180f, 0.010f, 0.015f, 1.0f, 1.2f, 1.0f},
//	{0.200f, 0.010f, 0.015f, 1.0f, 1.0f, 0.7f},
//};


/*行进控制*/
class cLQR
{		
	protected:
	/*LQR -K matrix*/
	/*2N means normal LQR*/
	/*2N+1 means off-ground LQR*/
	float LQRKbuf[LQRKNUM][12]=
	{


	//-K in Arm Math Matrix Order: K00 K01 K02 K03 K04 K05 K10 K11 K12 K13 K14 K15
	/* Normal -K	L=0.284000	R00=4.00	R11=2.00 */
 	{23.58523, 4.471241, 4.262843, 6.413353, -20.567655, -7.215952, -13.722401, -3.144908, -3.695449, -4.806094, -41.436420, -6.724782},
	/* OffGround -K	L=0.284000	R00=4.00	R11=2.00 */
 	{0, 0, 0, 0, 0, 0, -13.722401, -3.144908, 0, 0, 0, 0},
	/* OffGround -K	L=0.284000	R00=4.00	R11=2.00 */
 	{0, 0, 0, 0, 0, 0, -13.722401, -3.144908, 0, 0, -41.436420, -6.724782},
	/* leg_K -K	L=0.284000	R00=4.00	R11=2.00 */
 	{55.35162, 12.705721, 6.632396, 12.562181, -16.214063, -10.163727, -24.882606, -7.728393, -5.165806, -6.616148, -20.853279, -4.397081},
	/* Normal -K	L=0.286000	R00=4.00	R11=2.00 */
 	{23.92781, 4.503271, 4.300862, 6.428810, -20.043484, -7.014633, -13.474857, -3.056263, -3.606269, -4.666778, -41.902866, -6.904472},
	/* OffGround -K	L=0.286000	R00=4.00	R11=2.00 */
 	{0, 0, 0, 0, 0, 0, -13.474857, -3.056263, 0, 0, 0, 0},
	/* OffGround -K	L=0.286000	R00=4.00	R11=2.00 */
 	{0, 0, 0, 0, 0, 0, -13.474857, -3.056263, 0, 0, -41.902866, -6.904472},
	/* leg_K -K	L=0.286000	R00=4.00	R11=2.00 */
 	{55.88335, 12.774266, 6.677569, 12.528368, -15.775133, -9.835864, -24.401057, -7.518790, -5.067885, -6.463358, -21.157650, -4.563210},
	/* Normal -K	L=0.288000	R00=4.00	R11=2.00 */
 	{24.25270, 4.534621, 4.336453, 6.443962, -19.540072, -6.824425, -13.230522, -2.972006, -3.519993, -4.534257, -42.336452, -7.069956},
	/* OffGround -K	L=0.288000	R00=4.00	R11=2.00 */
 	{0, 0, 0, 0, 0, 0, -13.230522, -2.972006, 0, 0, 0, 0},
	/* OffGround -K	L=0.288000	R00=4.00	R11=2.00 */
 	{0, 0, 0, 0, 0, 0, -13.230522, -2.972006, 0, 0, -42.336452, -7.069956},
	/* leg_K -K	L=0.288000	R00=4.00	R11=2.00 */
 	{56.38415, 12.839586, 6.720840, 12.499781, -15.360029, -9.530608, -23.930444, -7.319614, -4.971637, -6.315545, -21.441040, -4.717122},
	/* Normal -K	L=0.292000	R00=4.00	R11=2.00 */
 	{24.61727, 4.581103, 4.374001, 6.463137, -18.997174, -6.625881, -12.966527, -2.887286, -3.425818, -4.393111, -42.789446, -7.239687},
	/* OffGround -K	L=0.292000	R00=4.00	R11=2.00 */
 	{0, 0, 0, 0, 0, 0, -12.966527, -2.887286, 0, 0, 0, 0},
	/* OffGround -K	L=0.292000	R00=4.00	R11=2.00 */
 	{0, 0, 0, 0, 0, 0, -12.966527, -2.887286, 0, 0, -42.789446, -7.239687},
	/* leg_K -K	L=0.292000	R00=4.00	R11=2.00 */
 	{56.93041, 12.928115, 6.766819, 12.474647, -14.924134, -9.215234, -23.430332, -7.115545, -4.866579, -6.157838, -21.733566, -4.874480},
	/* Normal -K	L=0.296000	R00=4.00	R11=2.00 */
 	{24.88749, 4.609518, 4.402475, 6.476216, -18.571968, -6.469386, -12.751734, -2.818013, -3.352077, -4.283264, -43.132249, -7.368564},
	/* OffGround -K	L=0.296000	R00=4.00	R11=2.00 */
 	{0, 0, 0, 0, 0, 0, -12.751734, -2.818013, 0, 0, 0, 0},
	/* OffGround -K	L=0.296000	R00=4.00	R11=2.00 */
 	{0, 0, 0, 0, 0, 0, -12.751734, -2.818013, 0, 0, -43.132249, -7.368564},
	/* leg_K -K	L=0.296000	R00=4.00	R11=2.00 */
 	{57.34138, 12.984467, 6.802928, 12.455831, -14.581978, -8.970572, -23.021981, -6.950965, -4.781940, -6.031641, -21.958902, -4.995641},
	/* Normal -K	L=0.302000	R00=5.00	R11=3.00 */
 	{35.54286, 5.873284, 8.381556, 11.335405, -19.830206, -8.602629, -14.422136, -2.907322, -7.041486, -7.435460, -33.441326, -5.924360},
	/* OffGround -K	L=0.302000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -14.422136, -2.907322, 0, 0, 0, 0},
	/* OffGround -K	L=0.302000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -14.422136, -2.907322, 0, 0, -33.441326, -5.924360},
	/* leg_K -K	L=0.302000	R00=5.00	R11=3.00 */
 	{57.81792, 13.048622, 6.845267, 12.435706, -14.180960, -8.687254, -22.531871, -6.757113, -4.680157, -5.881596, -22.218080, -5.134462},
	/* Normal -K	L=0.308000	R00=5.00	R11=3.00 */
 	{35.82995, 5.898244, 8.442063, 11.367511, -19.464040, -8.425466, -14.206493, -2.845924, -6.919968, -7.289823, -33.739308, -6.049491},
	/* OffGround -K	L=0.308000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -14.206493, -2.845924, 0, 0, 0, 0},
	/* OffGround -K	L=0.308000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -14.206493, -2.845924, 0, 0, -33.739308, -6.049491},
	/* leg_K -K	L=0.308000	R00=5.00	R11=3.00 */
 	{58.15334, 13.094940, 6.875094, 12.422826, -13.898052, -8.489509, -22.180295, -6.620556, -4.606713, -5.774576, -22.397553, -5.230173},
	/* Normal -K	L=0.316000	R00=5.00	R11=3.00 */
 	{36.23325, 5.932537, 8.526626, 11.412578, -18.939983, -8.174910, -13.891430, -2.758006, -6.744956, -7.081770, -34.153883, -6.222467},
	/* OffGround -K	L=0.316000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -13.891430, -2.758006, 0, 0, 0, 0},
	/* OffGround -K	L=0.316000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -13.891430, -2.758006, 0, 0, -34.153883, -6.222467},
	/* leg_K -K	L=0.316000	R00=5.00	R11=3.00 */
 	{58.62356, 13.158384, 6.917223, 12.406022, -13.496944, -8.212266, -21.671018, -6.425830, -4.500376, -5.621003, -22.647146, -5.362829},
	/* Normal -K	L=0.322000	R00=5.00	R11=3.00 */
 	{36.52084, 5.957622, 8.585895, 11.444539, -18.563505, -7.996950, -13.662521, -2.695463, -6.618460, -6.932787, -34.443127, -6.342277},
	/* OffGround -K	L=0.322000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -13.662521, -2.695463, 0, 0, 0, 0},
	/* OffGround -K	L=0.322000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -13.662521, -2.695463, 0, 0, -34.443127, -6.342277},
	/* leg_K -K	L=0.322000	R00=5.00	R11=3.00 */
 	{58.95667, 13.203514, 6.947095, 12.395099, -13.210958, -8.016730, -21.301360, -6.286748, -4.423023, -5.510359, -22.821473, -5.455125},
	/* Normal -K	L=0.330000	R00=5.00	R11=3.00 */
 	{37.23370, 5.990737, 8.746692, 11.602761, -19.130019, -7.936575, -13.530972, -2.620398, -6.257713, -6.604239, -38.607464, -6.892047},
	/* OffGround -K	L=0.330000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -13.530972, -2.620398, 0, 0, 0, 0},
	/* OffGround -K	L=0.330000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -13.530972, -2.620398, 0, 0, -38.607464, -6.892047},
	/* leg_K -K	L=0.330000	R00=5.00	R11=3.00 */
 	{59.34660, 13.257882, 6.981872, 12.383437, -12.875802, -7.789737, -20.862418, -6.124040, -4.330792, -5.379649, -23.021784, -5.560769},
	/* Normal -K	L=0.338000	R00=5.00	R11=3.00 */
 	{37.50039, 6.015699, 8.796651, 11.628782, -18.752529, -7.768209, -13.307364, -2.562969, -6.139887, -6.466207, -38.872571, -6.997565},
	/* OffGround -K	L=0.338000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -13.307364, -2.562969, 0, 0, 0, 0},
	/* OffGround -K	L=0.338000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -13.307364, -2.562969, 0, 0, -38.872571, -6.997565},
	/* leg_K -K	L=0.338000	R00=5.00	R11=3.00 */
 	{59.65290, 13.300237, 7.009205, 12.374816, -12.610172, -7.611318, -20.509883, -5.994942, -4.256572, -5.275305, -23.177363, -5.642573},
	/* Normal -K	L=0.346000	R00=5.00	R11=3.00 */
 	{37.77888, 6.040913, 8.848648, 11.655772, -18.350951, -7.590582, -13.065542, -2.501584, -6.014071, -6.319535, -39.147709, -7.106667},
	/* OffGround -K	L=0.346000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -13.065542, -2.501584, 0, 0, 0, 0},
	/* OffGround -K	L=0.346000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -13.065542, -2.501584, 0, 0, -39.147709, -7.106667},
	/* leg_K -K	L=0.346000	R00=5.00	R11=3.00 */
 	{59.97268, 13.343122, 7.037837, 12.366183, -12.329471, -7.424318, -20.131707, -5.857849, -4.177089, -5.164207, -23.338726, -5.727223},
	/* Normal -K	L=0.356000	R00=5.00	R11=3.00 */
 	{38.10136, 6.072052, 8.907042, 11.686672, -17.888771, -7.387981, -12.786510, -2.431995, -5.868646, -6.151366, -39.455630, -7.228019},
	/* OffGround -K	L=0.356000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -12.786510, -2.431995, 0, 0, 0, 0},
	/* OffGround -K	L=0.356000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -12.786510, -2.431995, 0, 0, -39.455630, -7.228019},
	/* leg_K -K	L=0.356000	R00=5.00	R11=3.00 */
 	{60.33874, 13.393697, 7.070306, 12.357128, -12.007795, -7.211871, -19.693523, -5.701072, -4.084680, -5.036087, -23.519696, -5.821826},
	/* Normal -K	L=0.364000	R00=5.00	R11=3.00 */
 	{39.28086, 6.098446, 8.958970, 11.829086, -17.540739, -7.288626, -13.002875, -2.384330, -5.735397, -6.037922, -39.697661, -7.311125},
	/* OffGround -K	L=0.364000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -13.002875, -2.384330, 0, 0, 0, 0},
	/* OffGround -K	L=0.364000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -13.002875, -2.384330, 0, 0, -39.697661, -7.311125},
	/* leg_K -K	L=0.364000	R00=5.00	R11=3.00 */
 	{60.60074, 13.429981, 7.093431, 12.351016, -11.776134, -7.060021, -19.374528, -5.588144, -4.017304, -4.943299, -23.647355, -5.888379},
	/* Normal -K	L=0.372000	R00=5.00	R11=3.00 */
 	{39.50270, 6.120809, 8.997554, 11.848438, -17.217759, -7.147395, -12.795857, -2.336260, -5.633830, -5.920678, -39.901598, -7.391415},
	/* OffGround -K	L=0.372000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -12.795857, -2.336260, 0, 0, 0, 0},
	/* OffGround -K	L=0.372000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -12.795857, -2.336260, 0, 0, -39.901598, -7.391415},
	/* leg_K -K	L=0.372000	R00=5.00	R11=3.00 */
 	{60.85148, 13.464629, 7.115470, 12.345416, -11.553135, -6.914754, -19.064619, -5.479346, -3.951811, -4.853567, -23.768114, -5.951202},
	/* Normal -K	L=0.384000	R00=5.00	R11=3.00 */
 	{33.59095, 5.858618, 5.828319, 8.608714, -12.911771, -5.494947, -10.690866, -2.186595, -3.170356, -3.882817, -34.137805, -7.187878},
	/* OffGround -K	L=0.384000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -10.690866, -2.186595, 0, 0, 0, 0},
	/* OffGround -K	L=0.384000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -10.690866, -2.186595, 0, 0, -34.137805, -7.187878},
	/* leg_K -K	L=0.384000	R00=5.00	R11=3.00 */
 	{61.17252, 13.509036, 7.143524, 12.338561, -11.265781, -6.728753, -18.661786, -5.339210, -3.866537, -4.737439, -23.920574, -6.030331},
	/* Normal -K	L=0.392000	R00=5.00	R11=3.00 */
 	{33.76405, 5.877876, 5.846422, 8.617762, -12.676083, -5.392408, -10.529364, -2.144198, -3.114308, -3.808168, -34.267236, -7.242446},
	/* OffGround -K	L=0.392000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -10.529364, -2.144198, 0, 0, 0, 0},
	/* OffGround -K	L=0.392000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -10.529364, -2.144198, 0, 0, -34.267236, -7.242446},
	/* leg_K -K	L=0.392000	R00=5.00	R11=3.00 */
 	{61.39915, 13.539973, 7.163244, 12.333891, -11.061260, -6.597281, -18.371919, -5.239205, -3.805246, -4.654359, -24.026953, -6.085436},
	/* Normal -K	L=0.402000	R00=5.00	R11=3.00 */
 	{33.95415, 5.900788, 5.865609, 8.627694, -12.421458, -5.282164, -10.355188, -2.099141, -3.053585, -3.727774, -34.404069, -7.299963},
	/* OffGround -K	L=0.402000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -10.355188, -2.099141, 0, 0, 0, 0},
	/* OffGround -K	L=0.402000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -10.355188, -2.099141, 0, 0, -34.404069, -7.299963},
	/* leg_K -K	L=0.402000	R00=5.00	R11=3.00 */
 	{61.64553, 13.575713, 7.184282, 12.329256, -10.840610, -6.456189, -18.058157, -5.131973, -3.738558, -4.564520, -24.139671, -6.143666},
	/* Normal -K	L=0.410000	R00=5.00	R11=3.00 */
 	{34.09914, 5.917698, 5.880187, 8.635112, -12.224340, -5.197071, -10.218986, -2.064070, -3.006494, -3.665595, -34.507858, -7.343565},
	/* OffGround -K	L=0.410000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -10.218986, -2.064070, 0, 0, 0, 0},
	/* OffGround -K	L=0.410000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -10.218986, -2.064070, 0, 0, -34.507858, -7.343565},
	/* leg_K -K	L=0.410000	R00=5.00	R11=3.00 */
 	{61.83346, 13.602002, 7.200350, 12.325693, -10.670140, -6.347701, -17.813598, -5.048819, -3.686679, -4.494856, -24.225298, -6.187856},
	/* Normal -K	L=0.420000	R00=5.00	R11=3.00 */
 	{34.27456, 5.938565, 5.897502, 8.644002, -11.985966, -5.094581, -10.053454, -2.021806, -2.949427, -3.590514, -34.630911, -7.395183},
	/* OffGround -K	L=0.420000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -10.053454, -2.021806, 0, 0, 0, 0},
	/* OffGround -K	L=0.420000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -10.053454, -2.021806, 0, 0, -34.630911, -7.395183},
	/* leg_K -K	L=0.420000	R00=5.00	R11=3.00 */
 	{62.05966, 13.633899, 7.219527, 12.321550, -10.464384, -6.217373, -17.516633, -4.948495, -3.623633, -4.410531, -24.326952, -6.240234},
	/* Normal -K	L=0.432000	R00=5.00	R11=3.00 */
 	{34.47569, 5.962471, 5.917045, 8.654015, -11.710992, -4.976828, -9.861000, -1.973053, -2.883452, -3.504030, -34.769525, -7.453260},
	/* OffGround -K	L=0.432000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -9.861000, -1.973053, 0, 0, 0, 0},
	/* OffGround -K	L=0.432000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -9.861000, -1.973053, 0, 0, -34.769525, -7.453260},
	/* leg_K -K	L=0.432000	R00=5.00	R11=3.00 */
 	{62.31800, 13.669920, 7.241294, 12.316893, -10.227541, -6.068155, -17.172076, -4.832869, -3.550508, -4.313128, -24.441649, -6.299245},
	/* Normal -K	L=0.442000	R00=5.00	R11=3.00 */
 	{34.63844, 5.982847, 5.932371, 8.662074, -11.490768, -4.882989, -9.706425, -1.934347, -2.830480, -3.434904, -34.877998, -7.498616},
	/* OffGround -K	L=0.442000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -9.706425, -1.934347, 0, 0, 0, 0},
	/* OffGround -K	L=0.442000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -9.706425, -1.934347, 0, 0, -34.877998, -7.498616},
	/* leg_K -K	L=0.442000	R00=5.00	R11=3.00 */
 	{62.52508, 13.699841, 7.258453, 12.313389, -10.038229, -5.949511, -16.895248, -4.740704, -3.491623, -4.235068, -24.531540, -6.345401},
	/* Normal -K	L=0.452000	R00=5.00	R11=3.00 */
 	{34.78076, 6.000701, 5.945578, 8.668988, -11.297432, -4.800739, -9.570249, -1.900460, -2.783912, -3.374333, -34.971334, -7.537623},
	/* OffGround -K	L=0.452000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -9.570249, -1.900460, 0, 0, 0, 0},
	/* OffGround -K	L=0.452000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -9.570249, -1.900460, 0, 0, -34.971334, -7.537623},
	/* leg_K -K	L=0.452000	R00=5.00	R11=3.00 */
 	{62.70580, 13.725878, 7.273324, 12.310356, -9.872112, -5.845777, -16.651208, -4.659879, -3.439662, -4.166439, -24.609081, -6.385169},
	/* Normal -K	L=0.466000	R00=5.00	R11=3.00 */
 	{34.94914, 6.021465, 5.961052, 8.676943, -11.066390, -4.702505, -9.406840, -1.859995, -2.728206, -3.302092, -35.080546, -7.583268},
	/* OffGround -K	L=0.466000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -9.406840, -1.859995, 0, 0, 0, 0},
	/* OffGround -K	L=0.466000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -9.406840, -1.859995, 0, 0, -35.080546, -7.583268},
	/* leg_K -K	L=0.466000	R00=5.00	R11=3.00 */
 	{62.91972, 13.756132, 7.290857, 12.306711, -9.673601, -5.722225, -16.358143, -4.563272, -3.377230, -4.084274, -24.700088, -6.431801},
	/* Normal -K	L=0.478000	R00=5.00	R11=3.00 */
 	{35.08572, 6.039755, 5.973094, 8.683421, -10.883238, -4.624941, -9.277660, -1.828412, -2.683950, -3.244969, -35.165379, -7.618650},
	/* OffGround -K	L=0.478000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -9.277660, -1.828412, 0, 0, 0, 0},
	/* OffGround -K	L=0.478000	R00=5.00	R11=3.00 */
 	{0, 0, 0, 0, 0, 0, -9.277660, -1.828412, 0, 0, -35.165379, -7.618650},
	/* leg_K -K	L=0.478000	R00=5.00	R11=3.00 */
 	{63.09116, 13.782128, 7.304567, 12.304056, -9.516365, -5.624758, -16.125699, -4.487233, -3.327488, -4.019120, -24.770911, -6.468016}


	};
	float LQROutBuf[2]={0};
	float LQRXerrorBuf[6]={0};
	
	arm_matrix_instance_f32 *LQRXRefX;
	arm_matrix_instance_f32 *LQRXObsX;
	
	
	arm_matrix_instance_f32 MatLQRNegK = {2, 6, (float*)LQRKbuf[0]};
	arm_matrix_instance_f32 MatLQRErrX = {6, 1, LQRXerrorBuf};
	arm_matrix_instance_f32 MatLQROutU = {2, 1, LQROutBuf};
	
	
	
	public:
		
	/*Calculate X. Output is u (T,Tp)`*/
	void LQRCal(float* Tout)
	{
		//Calculate error
		arm_mat_sub_f32(this->LQRXObsX,this->LQRXRefX,&this->MatLQRErrX);
		//Calculate output value
		arm_mat_mult_f32(&this->MatLQRNegK,&this->MatLQRErrX,&this->MatLQROutU);
		//return Value
		Tout[0] = this->LQROutBuf[0];
		Tout[1] = this->LQROutBuf[1];
	}

	/* 	
		SetLQR -K paramaters
		LegLenth : Really length of leg
		isFly	 : Is robot in the sky, should compare with offground detection
	*/
	void RefreshLQRK(float LegLenth, uint8_t isFly)
	{
		LegLenth = (LegLenth<LEGMIN)?LEGMIN:LegLenth;
		LegLenth = (LegLenth>LEGMAX)?LEGMAX:LegLenth;
		volatile uint8_t ID = roundf((LegLenth - LEGMIN)/LQRRESOLUTION);
		this->MatLQRNegK.pData = (float*)LQRKbuf[4*ID+isFly];
	}
	
	/* Set LQR Error Variate*/
	void InitMatX(arm_matrix_instance_f32* pMatXRef, arm_matrix_instance_f32* pMatXObs)
	{
		this->LQRXRefX = pMatXRef;
		this->LQRXObsX = pMatXObs;
	}
};

/*航向角追踪*/
//class cLoopYaw : public cPIDPla
//{
//	public:

//	cLoopYaw(void)
//	{PID_Init();}
//	
//	void PID_Init(void)
//	{
//		this->Fs = 0.0f;
//		this->Kp = 2;//3.0f;
//		this->Ki = 0;
//		this->Kd = 20;//400.0f;
//		this->Kf = 0.0f;
//		this->IN_RANGE_EN_D = 0;// Pi/3
//		this->IN_RANGE_EN_I = 0;
//		this->MaxOutValue = 5;
//		this->MinOutValue = -5;
//		this->Maxintegral = 0;
//		this->Minintegral = 0;
//	}
//};
/* 航向角跟踪 */
class cLoopYaw : public cPIDPla
{
	public:

	cLoopYaw(void)
	{PID_Init();}
	
	void PID_Init(void)
	{
		this->Fs = 0.0f;
		this->Kp = 2;//3.0f;
		this->Ki = 0;
		this->Kd = 70;//400.0f;
		this->Kf = 0.0f;
		this->IN_RANGE_EN_D = 0;// Pi/3
		this->IN_RANGE_EN_I = 0;
		this->MaxOutValue = 1;
		this->MinOutValue = -1;
		this->Maxintegral = 0;
		this->Minintegral = 0;
	}
};

/* 小陀螺 */
class cLoopGyro : public cPIDPla
{
  public:
		cLoopGyro(void)
		{PID_Init();}
	
	void PID_Init(void)
	{
				this->Fs = 0.0f;
		this->Kp = 3.0f;//3.0f;
		this->Ki = 0;
		this->Kd = 0;//400.0f;
		this->Kf = 0.0f;
		this->IN_RANGE_EN_D = 0;// Pi/3
		this->IN_RANGE_EN_I = 0;
		this->MaxOutValue = 4;
		this->MinOutValue = -4;
		this->Maxintegral = 0;
		this->Minintegral = 0;
	}
};
/*倒立摆长度*/
class cLoopLen : public cPIDPla
{
	public:
	cLoopLen(void)
	{PID_Init();}
	
	void PID_Init(void)
	{
		this->Fs = 0.0f;
		this->Kp = 400;//800//400.
		this->Ki = 1.0f;
		this->Kd = 1200;//500.0f;//-24;//10
		this->Kf = 0.0f;
		this->IN_RANGE_EN_D = 0;// Pi/3
		this->IN_RANGE_EN_I = 0;
		this->MaxOutValue = 10000.0f;
		this->MinOutValue = -10000.0f;
		this->Maxintegral = 5.0f;
		this->Minintegral = -5.0f;
	}
};
class cLoopLen_Dot : public cPIDPla
{
	public:
	cLoopLen_Dot(void)
	{PID_Init();}
	
	void PID_Init(void)
	{
		this->Fs = 0.0f;
		this->Kp = 1.0f;//飞坡1.0
		this->Ki = 0.0f;
		this->Kd = 0;//500.0f;//-24;//10
		this->Kf = 0.0f;
		this->IN_RANGE_EN_D = 0;// Pi/3
		this->IN_RANGE_EN_I = 0;
		this->MaxOutValue = 10000.0f;
		this->MinOutValue = -10000.0f;
		this->Maxintegral = 5.0f;
		this->Minintegral = -5.0f;
	}
};
class cLoopLen_Spf : public cPIDSpf
{
	public:
	cLoopLen_Spf(void)
	{
		PID_Init();
	}
	void PID_Init(void)
	{
		this->Kp = 400;//800//400.
		this->Ki = 0.0f;
		this->Kd = 30;//500.0f;//-24;//10
		this->MaxOutValue = 10000.0f;
		this->MinOutValue = -10000.0f;
		this->Maxintegral = 5.0f;
		this->Minintegral = -5.0f;
	}
};

class cLooplen_Ready:public cPIDPla
{
	public:
	cLooplen_Ready(void)
	{PID_Init();}
	
	void PID_Init(void)
	{
		this->Fs = 0.0f;
		this->Kp = 400;//800//400.
		this->Ki = 1.0f;
		this->Kd = 500;//500.0f;//-24;//10
		this->Kf = 0.0f;
		this->IN_RANGE_EN_D = 0;// Pi/3
		this->IN_RANGE_EN_I = 0;
		this->MaxOutValue = 10000.0f;
		this->MinOutValue = -10000.0f;
		this->Maxintegral = 5.0f;
		this->Minintegral = -5.0f;
	}
};
class cLooplen_Stop:public cPIDPla
{
	public:
	cLooplen_Stop(void)
	{PID_Init();}
	
	void PID_Init(void)
	{
		this->Fs = 0.0f;
		this->Kp = 400;//800//400.
		this->Ki = 1.0f;
		this->Kd = 500;//500.0f;//-24;//10
		this->Kf = 0.0f;
		this->IN_RANGE_EN_D = 0;// Pi/3
		this->IN_RANGE_EN_I = 0;
		this->MaxOutValue = 10000.0f;
		this->MinOutValue = -10000.0f;
		this->Maxintegral = 5.0f;
		this->Minintegral = -5.0f;
	}
};	
/*斜坡平稳*/
class cLoopRoll : public cPIDPla
{
	public:
	cLoopRoll(void)
	{PID_Init();}
	
	void PID_Init(void)
	{
		this->Fs = 0.0f;
		this->Kp = 0.8f;
		this->Ki = 0;//0.001f;
		this->Kd = 10;//0.100f;
		this->Kf = 0.0f;
		this->IN_RANGE_EN_D = 0;// Pi/3
		this->IN_RANGE_EN_I = 0;
		this->MaxOutValue = 0.05;
		this->MinOutValue = -0.05;
		this->Maxintegral = 50;
		this->Minintegral = -50;
	}
};

/*底盘跟随云台*/
class cLoopCFG : public cPIDPla
{
	public:
	cLoopCFG(void)
	{PID_Init();}
	
	void PID_Init(void)
	{
		this->Fs = 0.0f;
		this->Kp = 20.0f;//0.05f;
		this->Ki = 0;
		this->Kd = 5.0f;//2.0f;
		this->Kf = 0.0f;
		this->IN_RANGE_EN_D = 0;// Pi/3
		this->IN_RANGE_EN_I = 0;
		this->MaxOutValue = 5.0f;//0.005
		this->MinOutValue = -5.0f;
		this->Maxintegral = 0;
		this->Minintegral = 0;
	}
};

/*避免劈叉*/
class cLoopTheta : public cPIDPla
{
	public:
	cLoopTheta(void)
	{PID_Init();}
	
	float MAXTHETA=0.0f;
	
	void PID_Init(void)
	{
		this->Fs = 0.0f;
		this->Kp = 75;//120.0f;//100.0f;
		this->Ki = 0;
		this->Kd = 600;//500.0f;//400;
		this->Kf = 0.0f;
		this->IN_RANGE_EN_D = 0;// Pi/3
		this->IN_RANGE_EN_I = 0;
		this->MaxOutValue = 200;
		this->MinOutValue = -200;
		this->Maxintegral = 0;
		this->Minintegral = 0;
	}
};
class cLoopTheta_Spf : public cPIDSpf
{
	public:
	cLoopTheta_Spf(void)
	{PID_Init();} 
	float MAXTHETA=0.0f;
	
	void PID_Init(void)
	{
	 this->Kp = 75;
	 this->Ki = 0;
	 this->Kd = 5;
   this->MaxOutValue = 100;
   this->MinOutValue = -100;
   this->Maxintegral = 0;
   this->Minintegral = 0;	 
	}
};
/*避免劈叉*/
class cLoopEscape : public cPIDPla
{
	public:
	cLoopEscape(void)
	{PID_Init();}

	
	void PID_Init(void)
	{
		this->Fs = 0.0f;
		this->Kp = 5.0f;// 12.0f;//100.0f;
		this->Ki = 0;//1.0f;
		this->Kd = 0;//1.0f;//400;
		this->Kf = 0.0f;
		this->IN_RANGE_EN_D = 0;// Pi/3
		this->IN_RANGE_EN_I = 0;
		this->MaxOutValue = 2000;
		this->MinOutValue = -2000;
		this->Maxintegral = 0;
		this->Minintegral = 0;
	}
};

/* 抵御外界扰动 */
class cLoopRollOffset : public cPIDPla
{
	public:
	cLoopRollOffset(void)
	{PID_Init();}	
	void PID_Init(void)
	{
		this->Fs = 0.0f;
		this->Kp = 900.0f;// 12.0f;//100.0f;
		this->Ki = 0;//1.0f;
		this->Kd = 0;//1.0f;//400;
		this->Kf = 0.0f;
		this->IN_RANGE_EN_D = 0;// Pi/3
		this->IN_RANGE_EN_I = 0;
		this->MaxOutValue = 100;
		this->MinOutValue = -100;
		this->Maxintegral = 0;
		this->Minintegral = 0;
	}	
};

#define t  0.002f
#define t2 0.000001f
#define t3 0.000000001f
#define t4 0.000000000001f
#define t5 0.000000000000001f

class cVelFusionKF
{
	protected:
	const float qq=5.0f;//10
	const float rv=0.1f;
	const float ra=60.0f;//25.0f
		
	const float A_Init[9]={1,t,t2/2,0,1,t,0,0,1};
	const float Q_Init[9]={t5/20*qq,t4/8*qq,t3/6*qq,t4/8*qq,t3/3*qq,t2/2*qq,t3/6*qq,t2/2*qq,t*qq}; 
	const float H_Init[6]={0,1,0,0,0,1};
	const float P_Init[9]={10,0,0,0,10,0,0,0,10};
	const float R_Init[4]={rv,0,0,ra};
	
	public:
	VelFusionKF_t KF;
	cVelFusionKF()
	{
		VelFusionKF_Init(&this->KF,3,2);//Inertia odome 3 State 2 observation
		memcpy(this->KF.P_data, P_Init, sizeof(P_Init));
		memcpy(this->KF.A_data, A_Init, sizeof(A_Init));
		memcpy(this->KF.Q_data, Q_Init, sizeof(Q_Init));
		memcpy(this->KF.H_data, H_Init, sizeof(H_Init));
		memcpy(this->KF.R_data, R_Init, sizeof(R_Init));
	}
	void ResetKF(void)
	{VelFusionKF_Reset(&this->KF);}
	void UpdateKalman(float Velocity, float AccelerationX)
	{
		this->KF.MeasuredVector[0] = Velocity;
		this->KF.MeasuredVector[1] = AccelerationX;
		VelFusionKF_Update(&this->KF);
	}
	
};
		
#endif
#endif
